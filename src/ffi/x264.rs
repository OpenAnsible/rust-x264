/* automatically generated by rust-bindgen */

#![allow(dead_code,
         non_camel_case_types,
         non_upper_case_globals,
         non_snake_case)]
pub const __llvm__: ::std::os::raw::c_uchar = 1;
pub const __clang__: ::std::os::raw::c_uchar = 1;
pub const __clang_major__: ::std::os::raw::c_uchar = 8;
pub const __clang_minor__: ::std::os::raw::c_uchar = 0;
pub const __clang_patchlevel__: ::std::os::raw::c_uchar = 0;
pub const __GNUC_MINOR__: ::std::os::raw::c_uchar = 2;
pub const __GNUC_PATCHLEVEL__: ::std::os::raw::c_uchar = 1;
pub const __GNUC__: ::std::os::raw::c_uchar = 4;
pub const __GXX_ABI_VERSION: ::std::os::raw::c_ushort = 1002;
pub const __ATOMIC_RELAXED: ::std::os::raw::c_uchar = 0;
pub const __ATOMIC_CONSUME: ::std::os::raw::c_uchar = 1;
pub const __ATOMIC_ACQUIRE: ::std::os::raw::c_uchar = 2;
pub const __ATOMIC_RELEASE: ::std::os::raw::c_uchar = 3;
pub const __ATOMIC_ACQ_REL: ::std::os::raw::c_uchar = 4;
pub const __ATOMIC_SEQ_CST: ::std::os::raw::c_uchar = 5;
pub const __PRAGMA_REDEFINE_EXTNAME: ::std::os::raw::c_uchar = 1;
pub const __CONSTANT_CFSTRINGS__: ::std::os::raw::c_uchar = 1;
pub const __BLOCKS__: ::std::os::raw::c_uchar = 1;
pub const __GXX_RTTI: ::std::os::raw::c_uchar = 1;
pub const __ORDER_LITTLE_ENDIAN__: ::std::os::raw::c_ushort = 1234;
pub const __ORDER_BIG_ENDIAN__: ::std::os::raw::c_ushort = 4321;
pub const __ORDER_PDP_ENDIAN__: ::std::os::raw::c_ushort = 3412;
pub const __BYTE_ORDER__: ::std::os::raw::c_ushort = 1234;
pub const __LITTLE_ENDIAN__: ::std::os::raw::c_uchar = 1;
pub const _LP64: ::std::os::raw::c_uchar = 1;
pub const __LP64__: ::std::os::raw::c_uchar = 1;
pub const __CHAR_BIT__: ::std::os::raw::c_uchar = 8;
pub const __SCHAR_MAX__: ::std::os::raw::c_uchar = 127;
pub const __SHRT_MAX__: ::std::os::raw::c_ushort = 32767;
pub const __INT_MAX__: ::std::os::raw::c_uint = 2147483647;
pub const __LONG_MAX__: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const __LONG_LONG_MAX__: ::std::os::raw::c_ulonglong =
    9223372036854775807;
pub const __WCHAR_MAX__: ::std::os::raw::c_uint = 2147483647;
pub const __INTMAX_MAX__: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const __SIZE_MAX__: ::std::os::raw::c_char = -1;
pub const __UINTMAX_MAX__: ::std::os::raw::c_char = -1;
pub const __PTRDIFF_MAX__: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const __INTPTR_MAX__: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const __UINTPTR_MAX__: ::std::os::raw::c_char = -1;
pub const __SIZEOF_DOUBLE__: ::std::os::raw::c_uchar = 8;
pub const __SIZEOF_FLOAT__: ::std::os::raw::c_uchar = 4;
pub const __SIZEOF_INT__: ::std::os::raw::c_uchar = 4;
pub const __SIZEOF_LONG__: ::std::os::raw::c_uchar = 8;
pub const __SIZEOF_LONG_DOUBLE__: ::std::os::raw::c_uchar = 16;
pub const __SIZEOF_LONG_LONG__: ::std::os::raw::c_uchar = 8;
pub const __SIZEOF_POINTER__: ::std::os::raw::c_uchar = 8;
pub const __SIZEOF_SHORT__: ::std::os::raw::c_uchar = 2;
pub const __SIZEOF_PTRDIFF_T__: ::std::os::raw::c_uchar = 8;
pub const __SIZEOF_SIZE_T__: ::std::os::raw::c_uchar = 8;
pub const __SIZEOF_WCHAR_T__: ::std::os::raw::c_uchar = 4;
pub const __SIZEOF_WINT_T__: ::std::os::raw::c_uchar = 4;
pub const __SIZEOF_INT128__: ::std::os::raw::c_uchar = 16;
pub const __INTMAX_WIDTH__: ::std::os::raw::c_uchar = 64;
pub const __PTRDIFF_WIDTH__: ::std::os::raw::c_uchar = 64;
pub const __INTPTR_WIDTH__: ::std::os::raw::c_uchar = 64;
pub const __SIZE_WIDTH__: ::std::os::raw::c_uchar = 64;
pub const __WCHAR_WIDTH__: ::std::os::raw::c_uchar = 32;
pub const __WINT_WIDTH__: ::std::os::raw::c_uchar = 32;
pub const __SIG_ATOMIC_WIDTH__: ::std::os::raw::c_uchar = 32;
pub const __SIG_ATOMIC_MAX__: ::std::os::raw::c_uint = 2147483647;
pub const __UINTMAX_WIDTH__: ::std::os::raw::c_uchar = 64;
pub const __UINTPTR_WIDTH__: ::std::os::raw::c_uchar = 64;
pub const __FLT_HAS_DENORM__: ::std::os::raw::c_uchar = 1;
pub const __FLT_DIG__: ::std::os::raw::c_uchar = 6;
pub const __FLT_DECIMAL_DIG__: ::std::os::raw::c_uchar = 9;
pub const __FLT_HAS_INFINITY__: ::std::os::raw::c_uchar = 1;
pub const __FLT_HAS_QUIET_NAN__: ::std::os::raw::c_uchar = 1;
pub const __FLT_MANT_DIG__: ::std::os::raw::c_uchar = 24;
pub const __FLT_MAX_10_EXP__: ::std::os::raw::c_uchar = 38;
pub const __FLT_MAX_EXP__: ::std::os::raw::c_uchar = 128;
pub const __FLT_MIN_10_EXP__: ::std::os::raw::c_char = -37;
pub const __FLT_MIN_EXP__: ::std::os::raw::c_char = -125;
pub const __DBL_HAS_DENORM__: ::std::os::raw::c_uchar = 1;
pub const __DBL_DIG__: ::std::os::raw::c_uchar = 15;
pub const __DBL_DECIMAL_DIG__: ::std::os::raw::c_uchar = 17;
pub const __DBL_HAS_INFINITY__: ::std::os::raw::c_uchar = 1;
pub const __DBL_HAS_QUIET_NAN__: ::std::os::raw::c_uchar = 1;
pub const __DBL_MANT_DIG__: ::std::os::raw::c_uchar = 53;
pub const __DBL_MAX_10_EXP__: ::std::os::raw::c_ushort = 308;
pub const __DBL_MAX_EXP__: ::std::os::raw::c_ushort = 1024;
pub const __DBL_MIN_10_EXP__: ::std::os::raw::c_short = -307;
pub const __DBL_MIN_EXP__: ::std::os::raw::c_short = -1021;
pub const __LDBL_HAS_DENORM__: ::std::os::raw::c_uchar = 1;
pub const __LDBL_DIG__: ::std::os::raw::c_uchar = 18;
pub const __LDBL_DECIMAL_DIG__: ::std::os::raw::c_uchar = 21;
pub const __LDBL_HAS_INFINITY__: ::std::os::raw::c_uchar = 1;
pub const __LDBL_HAS_QUIET_NAN__: ::std::os::raw::c_uchar = 1;
pub const __LDBL_MANT_DIG__: ::std::os::raw::c_uchar = 64;
pub const __LDBL_MAX_10_EXP__: ::std::os::raw::c_ushort = 4932;
pub const __LDBL_MAX_EXP__: ::std::os::raw::c_ushort = 16384;
pub const __LDBL_MIN_10_EXP__: ::std::os::raw::c_short = -4931;
pub const __LDBL_MIN_EXP__: ::std::os::raw::c_short = -16381;
pub const __POINTER_WIDTH__: ::std::os::raw::c_uchar = 64;
pub const __BIGGEST_ALIGNMENT__: ::std::os::raw::c_uchar = 16;
pub const __UINT8_MAX__: ::std::os::raw::c_uchar = 255;
pub const __INT8_MAX__: ::std::os::raw::c_uchar = 127;
pub const __UINT16_MAX__: ::std::os::raw::c_ushort = 65535;
pub const __INT16_MAX__: ::std::os::raw::c_ushort = 32767;
pub const __UINT32_MAX__: ::std::os::raw::c_uint = 4294967295;
pub const __INT32_MAX__: ::std::os::raw::c_uint = 2147483647;
pub const __UINT64_MAX__: ::std::os::raw::c_char = -1;
pub const __INT64_MAX__: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const __INT_LEAST8_MAX__: ::std::os::raw::c_uchar = 127;
pub const __UINT_LEAST8_MAX__: ::std::os::raw::c_uchar = 255;
pub const __INT_LEAST16_MAX__: ::std::os::raw::c_ushort = 32767;
pub const __UINT_LEAST16_MAX__: ::std::os::raw::c_ushort = 65535;
pub const __INT_LEAST32_MAX__: ::std::os::raw::c_uint = 2147483647;
pub const __UINT_LEAST32_MAX__: ::std::os::raw::c_uint = 4294967295;
pub const __INT_LEAST64_MAX__: ::std::os::raw::c_ulonglong =
    9223372036854775807;
pub const __UINT_LEAST64_MAX__: ::std::os::raw::c_char = -1;
pub const __INT_FAST8_MAX__: ::std::os::raw::c_uchar = 127;
pub const __UINT_FAST8_MAX__: ::std::os::raw::c_uchar = 255;
pub const __INT_FAST16_MAX__: ::std::os::raw::c_ushort = 32767;
pub const __UINT_FAST16_MAX__: ::std::os::raw::c_ushort = 65535;
pub const __INT_FAST32_MAX__: ::std::os::raw::c_uint = 2147483647;
pub const __UINT_FAST32_MAX__: ::std::os::raw::c_uint = 4294967295;
pub const __INT_FAST64_MAX__: ::std::os::raw::c_ulonglong =
    9223372036854775807;
pub const __UINT_FAST64_MAX__: ::std::os::raw::c_char = -1;
pub const __FINITE_MATH_ONLY__: ::std::os::raw::c_uchar = 0;
pub const __GNUC_STDC_INLINE__: ::std::os::raw::c_uchar = 1;
pub const __GCC_ATOMIC_TEST_AND_SET_TRUEVAL: ::std::os::raw::c_uchar = 1;
pub const __GCC_ATOMIC_BOOL_LOCK_FREE: ::std::os::raw::c_uchar = 2;
pub const __GCC_ATOMIC_CHAR_LOCK_FREE: ::std::os::raw::c_uchar = 2;
pub const __GCC_ATOMIC_CHAR16_T_LOCK_FREE: ::std::os::raw::c_uchar = 2;
pub const __GCC_ATOMIC_CHAR32_T_LOCK_FREE: ::std::os::raw::c_uchar = 2;
pub const __GCC_ATOMIC_WCHAR_T_LOCK_FREE: ::std::os::raw::c_uchar = 2;
pub const __GCC_ATOMIC_SHORT_LOCK_FREE: ::std::os::raw::c_uchar = 2;
pub const __GCC_ATOMIC_INT_LOCK_FREE: ::std::os::raw::c_uchar = 2;
pub const __GCC_ATOMIC_LONG_LOCK_FREE: ::std::os::raw::c_uchar = 2;
pub const __GCC_ATOMIC_LLONG_LOCK_FREE: ::std::os::raw::c_uchar = 2;
pub const __GCC_ATOMIC_POINTER_LOCK_FREE: ::std::os::raw::c_uchar = 2;
pub const __NO_INLINE__: ::std::os::raw::c_uchar = 1;
pub const __PIC__: ::std::os::raw::c_uchar = 2;
pub const __pic__: ::std::os::raw::c_uchar = 2;
pub const __FLT_EVAL_METHOD__: ::std::os::raw::c_uchar = 0;
pub const __FLT_RADIX__: ::std::os::raw::c_uchar = 2;
pub const __DECIMAL_DIG__: ::std::os::raw::c_uchar = 21;
pub const __SSP__: ::std::os::raw::c_uchar = 1;
pub const __amd64__: ::std::os::raw::c_uchar = 1;
pub const __amd64: ::std::os::raw::c_uchar = 1;
pub const __x86_64: ::std::os::raw::c_uchar = 1;
pub const __x86_64__: ::std::os::raw::c_uchar = 1;
pub const __core2: ::std::os::raw::c_uchar = 1;
pub const __core2__: ::std::os::raw::c_uchar = 1;
pub const __tune_core2__: ::std::os::raw::c_uchar = 1;
pub const __NO_MATH_INLINES: ::std::os::raw::c_uchar = 1;
pub const __FXSR__: ::std::os::raw::c_uchar = 1;
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16: ::std::os::raw::c_uchar = 1;
pub const __SSE4_1__: ::std::os::raw::c_uchar = 1;
pub const __SSSE3__: ::std::os::raw::c_uchar = 1;
pub const __SSE3__: ::std::os::raw::c_uchar = 1;
pub const __SSE2__: ::std::os::raw::c_uchar = 1;
pub const __SSE2_MATH__: ::std::os::raw::c_uchar = 1;
pub const __SSE__: ::std::os::raw::c_uchar = 1;
pub const __SSE_MATH__: ::std::os::raw::c_uchar = 1;
pub const __MMX__: ::std::os::raw::c_uchar = 1;
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1: ::std::os::raw::c_uchar = 1;
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2: ::std::os::raw::c_uchar = 1;
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4: ::std::os::raw::c_uchar = 1;
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8: ::std::os::raw::c_uchar = 1;
pub const __APPLE_CC__: ::std::os::raw::c_ushort = 6000;
pub const __APPLE__: ::std::os::raw::c_uchar = 1;
pub const OBJC_NEW_PROPERTIES: ::std::os::raw::c_uchar = 1;
pub const __apple_build_version__: ::std::os::raw::c_uint = 8000038;
pub const __DYNAMIC__: ::std::os::raw::c_uchar = 1;
pub const __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__:
          ::std::os::raw::c_uint =
    101200;
pub const __MACH__: ::std::os::raw::c_uchar = 1;
pub const __STDC__: ::std::os::raw::c_uchar = 1;
pub const __STDC_HOSTED__: ::std::os::raw::c_uchar = 1;
pub const __STDC_VERSION__: ::std::os::raw::c_uint = 201112;
pub const __STDC_UTF_16__: ::std::os::raw::c_uchar = 1;
pub const __STDC_UTF_32__: ::std::os::raw::c_uchar = 1;
pub const __WORDSIZE: ::std::os::raw::c_uchar = 64;
pub const __DARWIN_ONLY_64_BIT_INO_T: ::std::os::raw::c_uchar = 0;
pub const __DARWIN_ONLY_VERS_1050: ::std::os::raw::c_uchar = 0;
pub const __DARWIN_ONLY_UNIX_CONFORMANCE: ::std::os::raw::c_uchar = 1;
pub const __DARWIN_UNIX03: ::std::os::raw::c_uchar = 1;
pub const __DARWIN_64_BIT_INO_T: ::std::os::raw::c_uchar = 1;
pub const __DARWIN_VERS_1050: ::std::os::raw::c_uchar = 1;
pub const __DARWIN_NON_CANCELABLE: ::std::os::raw::c_uchar = 0;
pub const __DARWIN_C_ANSI: ::std::os::raw::c_ushort = 4096;
pub const __DARWIN_C_FULL: ::std::os::raw::c_uint = 900000;
pub const __DARWIN_C_LEVEL: ::std::os::raw::c_uint = 900000;
pub const __STDC_WANT_LIB_EXT1__: ::std::os::raw::c_uchar = 1;
pub const _DARWIN_FEATURE_64_BIT_INODE: ::std::os::raw::c_uchar = 1;
pub const _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE: ::std::os::raw::c_uchar = 1;
pub const _DARWIN_FEATURE_UNIX_CONFORMANCE: ::std::os::raw::c_uchar = 3;
pub const __PTHREAD_SIZE__: ::std::os::raw::c_ushort = 8176;
pub const __PTHREAD_ATTR_SIZE__: ::std::os::raw::c_uchar = 56;
pub const __PTHREAD_MUTEXATTR_SIZE__: ::std::os::raw::c_uchar = 8;
pub const __PTHREAD_MUTEX_SIZE__: ::std::os::raw::c_uchar = 56;
pub const __PTHREAD_CONDATTR_SIZE__: ::std::os::raw::c_uchar = 8;
pub const __PTHREAD_COND_SIZE__: ::std::os::raw::c_uchar = 40;
pub const __PTHREAD_ONCE_SIZE__: ::std::os::raw::c_uchar = 8;
pub const __PTHREAD_RWLOCK_SIZE__: ::std::os::raw::c_uchar = 192;
pub const __PTHREAD_RWLOCKATTR_SIZE__: ::std::os::raw::c_uchar = 16;
pub const INT8_MAX: ::std::os::raw::c_uchar = 127;
pub const INT16_MAX: ::std::os::raw::c_ushort = 32767;
pub const INT32_MAX: ::std::os::raw::c_uint = 2147483647;
pub const INT64_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const INT8_MIN: ::std::os::raw::c_char = -128;
pub const INT16_MIN: ::std::os::raw::c_short = -32768;
pub const INT32_MIN: ::std::os::raw::c_int = -2147483648;
pub const INT64_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const UINT8_MAX: ::std::os::raw::c_uchar = 255;
pub const UINT16_MAX: ::std::os::raw::c_ushort = 65535;
pub const UINT32_MAX: ::std::os::raw::c_uint = 4294967295;
pub const UINT64_MAX: ::std::os::raw::c_char = -1;
pub const INT_LEAST8_MIN: ::std::os::raw::c_char = -128;
pub const INT_LEAST16_MIN: ::std::os::raw::c_short = -32768;
pub const INT_LEAST32_MIN: ::std::os::raw::c_int = -2147483648;
pub const INT_LEAST64_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const INT_LEAST8_MAX: ::std::os::raw::c_uchar = 127;
pub const INT_LEAST16_MAX: ::std::os::raw::c_ushort = 32767;
pub const INT_LEAST32_MAX: ::std::os::raw::c_uint = 2147483647;
pub const INT_LEAST64_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const UINT_LEAST8_MAX: ::std::os::raw::c_uchar = 255;
pub const UINT_LEAST16_MAX: ::std::os::raw::c_ushort = 65535;
pub const UINT_LEAST32_MAX: ::std::os::raw::c_uint = 4294967295;
pub const UINT_LEAST64_MAX: ::std::os::raw::c_char = -1;
pub const INT_FAST8_MIN: ::std::os::raw::c_char = -128;
pub const INT_FAST16_MIN: ::std::os::raw::c_short = -32768;
pub const INT_FAST32_MIN: ::std::os::raw::c_int = -2147483648;
pub const INT_FAST64_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const INT_FAST8_MAX: ::std::os::raw::c_uchar = 127;
pub const INT_FAST16_MAX: ::std::os::raw::c_ushort = 32767;
pub const INT_FAST32_MAX: ::std::os::raw::c_uint = 2147483647;
pub const INT_FAST64_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const UINT_FAST8_MAX: ::std::os::raw::c_uchar = 255;
pub const UINT_FAST16_MAX: ::std::os::raw::c_ushort = 65535;
pub const UINT_FAST32_MAX: ::std::os::raw::c_uint = 4294967295;
pub const UINT_FAST64_MAX: ::std::os::raw::c_char = -1;
pub const INTPTR_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const INTPTR_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const UINTPTR_MAX: ::std::os::raw::c_char = -1;
pub const INTMAX_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const INTMAX_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const UINTMAX_MAX: ::std::os::raw::c_char = -1;
pub const PTRDIFF_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const PTRDIFF_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const SIZE_MAX: ::std::os::raw::c_char = -1;
pub const RSIZE_MAX: ::std::os::raw::c_char = -1;
pub const WCHAR_MAX: ::std::os::raw::c_uint = 2147483647;
pub const WCHAR_MIN: ::std::os::raw::c_int = -2147483648;
pub const WINT_MIN: ::std::os::raw::c_int = -2147483648;
pub const WINT_MAX: ::std::os::raw::c_uint = 2147483647;
pub const SIG_ATOMIC_MIN: ::std::os::raw::c_int = -2147483648;
pub const SIG_ATOMIC_MAX: ::std::os::raw::c_uint = 2147483647;
pub const __GNUC_VA_LIST: ::std::os::raw::c_uchar = 1;
pub const X264_BIT_DEPTH: ::std::os::raw::c_uchar = 8;
pub const X264_GPL: ::std::os::raw::c_uchar = 1;
pub const X264_INTERLACED: ::std::os::raw::c_uchar = 1;
pub const X264_CHROMA_FORMAT: ::std::os::raw::c_uchar = 0;
pub const X264_REV: ::std::os::raw::c_ushort = 2601;
pub const X264_REV_DIFF: ::std::os::raw::c_uchar = 0;
pub const X264_BUILD: ::std::os::raw::c_uchar = 148;
pub const X264_CPU_CMOV: ::std::os::raw::c_uchar = 1;
pub const X264_CPU_MMX: ::std::os::raw::c_uchar = 2;
pub const X264_CPU_MMX2: ::std::os::raw::c_uchar = 4;
pub const X264_CPU_MMXEXT: ::std::os::raw::c_uchar = 4;
pub const X264_CPU_SSE: ::std::os::raw::c_uchar = 8;
pub const X264_CPU_SSE2: ::std::os::raw::c_uchar = 16;
pub const X264_CPU_SSE3: ::std::os::raw::c_uchar = 32;
pub const X264_CPU_SSSE3: ::std::os::raw::c_uchar = 64;
pub const X264_CPU_SSE4: ::std::os::raw::c_uchar = 128;
pub const X264_CPU_SSE42: ::std::os::raw::c_ushort = 256;
pub const X264_CPU_LZCNT: ::std::os::raw::c_ushort = 512;
pub const X264_CPU_AVX: ::std::os::raw::c_ushort = 1024;
pub const X264_CPU_XOP: ::std::os::raw::c_ushort = 2048;
pub const X264_CPU_FMA4: ::std::os::raw::c_ushort = 4096;
pub const X264_CPU_FMA3: ::std::os::raw::c_ushort = 8192;
pub const X264_CPU_AVX2: ::std::os::raw::c_ushort = 16384;
pub const X264_CPU_BMI1: ::std::os::raw::c_ushort = 32768;
pub const X264_CPU_BMI2: ::std::os::raw::c_uint = 65536;
pub const X264_CPU_CACHELINE_32: ::std::os::raw::c_uint = 131072;
pub const X264_CPU_CACHELINE_64: ::std::os::raw::c_uint = 262144;
pub const X264_CPU_SSE2_IS_SLOW: ::std::os::raw::c_uint = 524288;
pub const X264_CPU_SSE2_IS_FAST: ::std::os::raw::c_uint = 1048576;
pub const X264_CPU_SLOW_SHUFFLE: ::std::os::raw::c_uint = 2097152;
pub const X264_CPU_STACK_MOD4: ::std::os::raw::c_uint = 4194304;
pub const X264_CPU_SLOW_CTZ: ::std::os::raw::c_uint = 8388608;
pub const X264_CPU_SLOW_ATOM: ::std::os::raw::c_uint = 16777216;
pub const X264_CPU_SLOW_PSHUFB: ::std::os::raw::c_uint = 33554432;
pub const X264_CPU_SLOW_PALIGNR: ::std::os::raw::c_uint = 67108864;
pub const X264_CPU_ALTIVEC: ::std::os::raw::c_uchar = 1;
pub const X264_CPU_ARMV6: ::std::os::raw::c_uchar = 1;
pub const X264_CPU_NEON: ::std::os::raw::c_uchar = 2;
pub const X264_CPU_FAST_NEON_MRC: ::std::os::raw::c_uchar = 4;
pub const X264_CPU_ARMV8: ::std::os::raw::c_uchar = 8;
pub const X264_CPU_MSA: ::std::os::raw::c_uchar = 1;
pub const X264_ANALYSE_I4x4: ::std::os::raw::c_uchar = 1;
pub const X264_ANALYSE_I8x8: ::std::os::raw::c_uchar = 2;
pub const X264_ANALYSE_PSUB16x16: ::std::os::raw::c_uchar = 16;
pub const X264_ANALYSE_PSUB8x8: ::std::os::raw::c_uchar = 32;
pub const X264_ANALYSE_BSUB16x16: ::std::os::raw::c_ushort = 256;
pub const X264_DIRECT_PRED_NONE: ::std::os::raw::c_uchar = 0;
pub const X264_DIRECT_PRED_SPATIAL: ::std::os::raw::c_uchar = 1;
pub const X264_DIRECT_PRED_TEMPORAL: ::std::os::raw::c_uchar = 2;
pub const X264_DIRECT_PRED_AUTO: ::std::os::raw::c_uchar = 3;
pub const X264_ME_DIA: ::std::os::raw::c_uchar = 0;
pub const X264_ME_HEX: ::std::os::raw::c_uchar = 1;
pub const X264_ME_UMH: ::std::os::raw::c_uchar = 2;
pub const X264_ME_ESA: ::std::os::raw::c_uchar = 3;
pub const X264_ME_TESA: ::std::os::raw::c_uchar = 4;
pub const X264_CQM_FLAT: ::std::os::raw::c_uchar = 0;
pub const X264_CQM_JVT: ::std::os::raw::c_uchar = 1;
pub const X264_CQM_CUSTOM: ::std::os::raw::c_uchar = 2;
pub const X264_RC_CQP: ::std::os::raw::c_uchar = 0;
pub const X264_RC_CRF: ::std::os::raw::c_uchar = 1;
pub const X264_RC_ABR: ::std::os::raw::c_uchar = 2;
pub const X264_QP_AUTO: ::std::os::raw::c_uchar = 0;
pub const X264_AQ_NONE: ::std::os::raw::c_uchar = 0;
pub const X264_AQ_VARIANCE: ::std::os::raw::c_uchar = 1;
pub const X264_AQ_AUTOVARIANCE: ::std::os::raw::c_uchar = 2;
pub const X264_AQ_AUTOVARIANCE_BIASED: ::std::os::raw::c_uchar = 3;
pub const X264_B_ADAPT_NONE: ::std::os::raw::c_uchar = 0;
pub const X264_B_ADAPT_FAST: ::std::os::raw::c_uchar = 1;
pub const X264_B_ADAPT_TRELLIS: ::std::os::raw::c_uchar = 2;
pub const X264_WEIGHTP_NONE: ::std::os::raw::c_uchar = 0;
pub const X264_WEIGHTP_SIMPLE: ::std::os::raw::c_uchar = 1;
pub const X264_WEIGHTP_SMART: ::std::os::raw::c_uchar = 2;
pub const X264_B_PYRAMID_NONE: ::std::os::raw::c_uchar = 0;
pub const X264_B_PYRAMID_STRICT: ::std::os::raw::c_uchar = 1;
pub const X264_B_PYRAMID_NORMAL: ::std::os::raw::c_uchar = 2;
pub const X264_KEYINT_MIN_AUTO: ::std::os::raw::c_uchar = 0;
pub const X264_KEYINT_MAX_INFINITE: ::std::os::raw::c_uint = 1073741824;
pub const X264_CSP_MASK: ::std::os::raw::c_int = 255;
pub const X264_CSP_NONE: ::std::os::raw::c_int = 0;
pub const X264_CSP_I420: ::std::os::raw::c_int = 1;
pub const X264_CSP_YV12: ::std::os::raw::c_int = 2;
pub const X264_CSP_NV12: ::std::os::raw::c_int = 3;
pub const X264_CSP_NV21: ::std::os::raw::c_int = 4;
pub const X264_CSP_I422: ::std::os::raw::c_int = 5;
pub const X264_CSP_YV16: ::std::os::raw::c_int = 6;
pub const X264_CSP_NV16: ::std::os::raw::c_int = 7;
pub const X264_CSP_V210: ::std::os::raw::c_int = 8;
pub const X264_CSP_I444: ::std::os::raw::c_int = 9;
pub const X264_CSP_YV24: ::std::os::raw::c_int = 10;
pub const X264_CSP_BGR: ::std::os::raw::c_int = 11;
pub const X264_CSP_BGRA: ::std::os::raw::c_int = 12;
pub const X264_CSP_RGB: ::std::os::raw::c_int = 13;
pub const X264_CSP_MAX: ::std::os::raw::c_int = 14;
pub const X264_CSP_VFLIP: ::std::os::raw::c_int = 4096;
pub const X264_CSP_HIGH_DEPTH: ::std::os::raw::c_int = 8192;
pub const X264_TYPE_AUTO: ::std::os::raw::c_uchar = 0;
pub const X264_TYPE_IDR: ::std::os::raw::c_uchar = 1;
pub const X264_TYPE_I: ::std::os::raw::c_uchar = 2;
pub const X264_TYPE_P: ::std::os::raw::c_uchar = 3;
pub const X264_TYPE_BREF: ::std::os::raw::c_uchar = 4;
pub const X264_TYPE_B: ::std::os::raw::c_uchar = 5;
pub const X264_TYPE_KEYFRAME: ::std::os::raw::c_uchar = 6;
pub const X264_LOG_NONE: ::std::os::raw::c_char = -1;
pub const X264_LOG_ERROR: ::std::os::raw::c_uchar = 0;
pub const X264_LOG_WARNING: ::std::os::raw::c_uchar = 1;
pub const X264_LOG_INFO: ::std::os::raw::c_uchar = 2;
pub const X264_LOG_DEBUG: ::std::os::raw::c_uchar = 3;
pub const X264_THREADS_AUTO: ::std::os::raw::c_uchar = 0;
pub const X264_SYNC_LOOKAHEAD_AUTO: ::std::os::raw::c_char = -1;
pub const X264_NAL_HRD_NONE: ::std::os::raw::c_uchar = 0;
pub const X264_NAL_HRD_VBR: ::std::os::raw::c_uchar = 1;
pub const X264_NAL_HRD_CBR: ::std::os::raw::c_uchar = 2;
pub const X264_PARAM_BAD_NAME: ::std::os::raw::c_char = -1;
pub const X264_PARAM_BAD_VALUE: ::std::os::raw::c_char = -2;
pub const X264_MBINFO_CONSTANT: ::std::os::raw::c_uchar = 1;
pub type int8_t = i8;
pub type int16_t = i16;
pub type int32_t = i32;
pub type int64_t = i64;
pub type uint8_t = u8;
pub type uint16_t = u16;
pub type uint32_t = u32;
pub type uint64_t = u64;
pub type int_least8_t = int8_t;
pub type int_least16_t = int16_t;
pub type int_least32_t = int32_t;
pub type int_least64_t = int64_t;
pub type uint_least8_t = uint8_t;
pub type uint_least16_t = uint16_t;
pub type uint_least32_t = uint32_t;
pub type uint_least64_t = uint64_t;
pub type int_fast8_t = int8_t;
pub type int_fast16_t = int16_t;
pub type int_fast32_t = int32_t;
pub type int_fast64_t = int64_t;
pub type uint_fast8_t = uint8_t;
pub type uint_fast16_t = uint16_t;
pub type uint_fast32_t = uint32_t;
pub type uint_fast64_t = uint64_t;
pub type __int8_t = ::std::os::raw::c_char;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_longlong;
pub type __uint64_t = ::std::os::raw::c_ulonglong;
pub type __darwin_intptr_t = ::std::os::raw::c_long;
pub type __darwin_natural_t = ::std::os::raw::c_uint;
pub type __darwin_ct_rune_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy)]
pub struct __mbstate_t {
    pub _bindgen_data_: [u64; 16usize],
}
impl __mbstate_t {
    pub unsafe fn __mbstate8(&mut self)
     -> *mut [::std::os::raw::c_char; 128usize] {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn _mbstateL(&mut self) -> *mut ::std::os::raw::c_longlong {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::clone::Clone for __mbstate_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for __mbstate_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type __darwin_mbstate_t = __mbstate_t;
pub type __darwin_ptrdiff_t = ::std::os::raw::c_long;
pub type __darwin_size_t = ::std::os::raw::c_ulong;
pub type __darwin_va_list = __builtin_va_list;
pub type __darwin_wchar_t = ::std::os::raw::c_int;
pub type __darwin_rune_t = __darwin_wchar_t;
pub type __darwin_wint_t = ::std::os::raw::c_int;
pub type __darwin_clock_t = ::std::os::raw::c_ulong;
pub type __darwin_socklen_t = __uint32_t;
pub type __darwin_ssize_t = ::std::os::raw::c_long;
pub type __darwin_time_t = ::std::os::raw::c_long;
pub type __darwin_blkcnt_t = __int64_t;
pub type __darwin_blksize_t = __int32_t;
pub type __darwin_dev_t = __int32_t;
pub type __darwin_fsblkcnt_t = ::std::os::raw::c_uint;
pub type __darwin_fsfilcnt_t = ::std::os::raw::c_uint;
pub type __darwin_gid_t = __uint32_t;
pub type __darwin_id_t = __uint32_t;
pub type __darwin_ino64_t = __uint64_t;
pub type __darwin_ino_t = __darwin_ino64_t;
pub type __darwin_mach_port_name_t = __darwin_natural_t;
pub type __darwin_mach_port_t = __darwin_mach_port_name_t;
pub type __darwin_mode_t = __uint16_t;
pub type __darwin_off_t = __int64_t;
pub type __darwin_pid_t = __int32_t;
pub type __darwin_sigset_t = __uint32_t;
pub type __darwin_suseconds_t = __int32_t;
pub type __darwin_uid_t = __uint32_t;
pub type __darwin_useconds_t = __uint32_t;
pub type __darwin_uuid_t = [::std::os::raw::c_uchar; 16usize];
pub type __darwin_uuid_string_t = [::std::os::raw::c_char; 37usize];
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __darwin_pthread_handler_rec {
    pub __routine: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut ::std::os::raw::c_void)>,
    pub __arg: *mut ::std::os::raw::c_void,
    pub __next: *mut __darwin_pthread_handler_rec,
}
impl ::std::default::Default for __darwin_pthread_handler_rec {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct _opaque_pthread_attr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 56usize],
}
impl ::std::clone::Clone for _opaque_pthread_attr_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for _opaque_pthread_attr_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct _opaque_pthread_cond_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 40usize],
}
impl ::std::clone::Clone for _opaque_pthread_cond_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for _opaque_pthread_cond_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct _opaque_pthread_condattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
impl ::std::default::Default for _opaque_pthread_condattr_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct _opaque_pthread_mutex_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 56usize],
}
impl ::std::clone::Clone for _opaque_pthread_mutex_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for _opaque_pthread_mutex_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct _opaque_pthread_mutexattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
impl ::std::default::Default for _opaque_pthread_mutexattr_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct _opaque_pthread_once_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
impl ::std::default::Default for _opaque_pthread_once_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct _opaque_pthread_rwlock_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 192usize],
}
impl ::std::clone::Clone for _opaque_pthread_rwlock_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for _opaque_pthread_rwlock_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct _opaque_pthread_rwlockattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 16usize],
}
impl ::std::default::Default for _opaque_pthread_rwlockattr_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct _opaque_pthread_t {
    pub __sig: ::std::os::raw::c_long,
    pub __cleanup_stack: *mut __darwin_pthread_handler_rec,
    pub __opaque: [::std::os::raw::c_char; 8176usize],
}
impl ::std::clone::Clone for _opaque_pthread_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for _opaque_pthread_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type __darwin_pthread_attr_t = _opaque_pthread_attr_t;
pub type __darwin_pthread_cond_t = _opaque_pthread_cond_t;
pub type __darwin_pthread_condattr_t = _opaque_pthread_condattr_t;
pub type __darwin_pthread_key_t = ::std::os::raw::c_ulong;
pub type __darwin_pthread_mutex_t = _opaque_pthread_mutex_t;
pub type __darwin_pthread_mutexattr_t = _opaque_pthread_mutexattr_t;
pub type __darwin_pthread_once_t = _opaque_pthread_once_t;
pub type __darwin_pthread_rwlock_t = _opaque_pthread_rwlock_t;
pub type __darwin_pthread_rwlockattr_t = _opaque_pthread_rwlockattr_t;
pub type __darwin_pthread_t = *mut _opaque_pthread_t;
pub type intptr_t = isize;
pub type uintptr_t = usize;
pub type intmax_t = ::std::os::raw::c_long;
pub type uintmax_t = ::std::os::raw::c_ulong;
pub type va_list = __builtin_va_list;
pub type __gnuc_va_list = __builtin_va_list;

// pub enum x264_t { }
#[derive(Copy, Clone)]
#[repr(C)]
#[derive(Debug)]
pub struct x264_t;
impl ::std::default::Default for x264_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}

#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum nal_unit_type_e {
    NAL_UNKNOWN = 0,
    NAL_SLICE = 1,
    NAL_SLICE_DPA = 2,
    NAL_SLICE_DPB = 3,
    NAL_SLICE_DPC = 4,
    NAL_SLICE_IDR = 5,
    NAL_SEI = 6,
    NAL_SPS = 7,
    NAL_PPS = 8,
    NAL_AUD = 9,
    NAL_FILLER = 12,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum nal_priority_e {
    NAL_PRIORITY_DISPOSABLE = 0,
    NAL_PRIORITY_LOW = 1,
    NAL_PRIORITY_HIGH = 2,
    NAL_PRIORITY_HIGHEST = 3,
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct x264_nal_t {
    pub i_ref_idc: ::std::os::raw::c_int,
    pub i_type: ::std::os::raw::c_int,
    pub b_long_startcode: ::std::os::raw::c_int,
    pub i_first_mb: ::std::os::raw::c_int,
    pub i_last_mb: ::std::os::raw::c_int,
    pub i_payload: ::std::os::raw::c_int,
    pub p_payload: *mut uint8_t,
    pub i_padding: ::std::os::raw::c_int,
}
impl ::std::default::Default for x264_nal_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct x264_zone_t {
    pub i_start: ::std::os::raw::c_int,
    pub i_end: ::std::os::raw::c_int,
    pub b_force_qp: ::std::os::raw::c_int,
    pub i_qp: ::std::os::raw::c_int,
    pub f_bitrate_factor: f32,
    pub param: *mut x264_param_t,
}
impl ::std::default::Default for x264_zone_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct x264_param_t {
    pub cpu: ::std::os::raw::c_uint,
    pub i_threads: ::std::os::raw::c_int,
    pub i_lookahead_threads: ::std::os::raw::c_int,
    pub b_sliced_threads: ::std::os::raw::c_int,
    pub b_deterministic: ::std::os::raw::c_int,
    pub b_cpu_independent: ::std::os::raw::c_int,
    pub i_sync_lookahead: ::std::os::raw::c_int,
    pub i_width: ::std::os::raw::c_int,
    pub i_height: ::std::os::raw::c_int,
    pub i_csp: ::std::os::raw::c_int,
    pub i_level_idc: ::std::os::raw::c_int,
    pub i_frame_total: ::std::os::raw::c_int,
    pub i_nal_hrd: ::std::os::raw::c_int,
    pub vui: Struct_Unnamed1,
    pub i_frame_reference: ::std::os::raw::c_int,
    pub i_dpb_size: ::std::os::raw::c_int,
    pub i_keyint_max: ::std::os::raw::c_int,
    pub i_keyint_min: ::std::os::raw::c_int,
    pub i_scenecut_threshold: ::std::os::raw::c_int,
    pub b_intra_refresh: ::std::os::raw::c_int,
    pub i_bframe: ::std::os::raw::c_int,
    pub i_bframe_adaptive: ::std::os::raw::c_int,
    pub i_bframe_bias: ::std::os::raw::c_int,
    pub i_bframe_pyramid: ::std::os::raw::c_int,
    pub b_open_gop: ::std::os::raw::c_int,
    pub b_bluray_compat: ::std::os::raw::c_int,
    pub i_avcintra_class: ::std::os::raw::c_int,
    pub b_deblocking_filter: ::std::os::raw::c_int,
    pub i_deblocking_filter_alphac0: ::std::os::raw::c_int,
    pub i_deblocking_filter_beta: ::std::os::raw::c_int,
    pub b_cabac: ::std::os::raw::c_int,
    pub i_cabac_init_idc: ::std::os::raw::c_int,
    pub b_interlaced: ::std::os::raw::c_int,
    pub b_constrained_intra: ::std::os::raw::c_int,
    pub i_cqm_preset: ::std::os::raw::c_int,
    pub psz_cqm_file: *mut ::std::os::raw::c_char,
    pub cqm_4iy: [uint8_t; 16usize],
    pub cqm_4py: [uint8_t; 16usize],
    pub cqm_4ic: [uint8_t; 16usize],
    pub cqm_4pc: [uint8_t; 16usize],
    pub cqm_8iy: [uint8_t; 64usize],
    pub cqm_8py: [uint8_t; 64usize],
    pub cqm_8ic: [uint8_t; 64usize],
    pub cqm_8pc: [uint8_t; 64usize],
    pub pf_log: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                               *mut ::std::os::raw::c_void,
                                                           i_level:
                                                               ::std::os::raw::c_int,
                                                           psz:
                                                               *const ::std::os::raw::c_char,
                                                           arg2: va_list)>,
    pub p_log_private: *mut ::std::os::raw::c_void,
    pub i_log_level: ::std::os::raw::c_int,
    pub b_full_recon: ::std::os::raw::c_int,
    pub psz_dump_yuv: *mut ::std::os::raw::c_char,
    pub analyse: Struct_Unnamed2,
    pub rc: Struct_Unnamed3,
    pub crop_rect: Struct_Unnamed4,
    pub i_frame_packing: ::std::os::raw::c_int,
    pub b_aud: ::std::os::raw::c_int,
    pub b_repeat_headers: ::std::os::raw::c_int,
    pub b_annexb: ::std::os::raw::c_int,
    pub i_sps_id: ::std::os::raw::c_int,
    pub b_vfr_input: ::std::os::raw::c_int,
    pub b_pulldown: ::std::os::raw::c_int,
    pub i_fps_num: uint32_t,
    pub i_fps_den: uint32_t,
    pub i_timebase_num: uint32_t,
    pub i_timebase_den: uint32_t,
    pub b_tff: ::std::os::raw::c_int,
    pub b_pic_struct: ::std::os::raw::c_int,
    pub b_fake_interlaced: ::std::os::raw::c_int,
    pub b_stitchable: ::std::os::raw::c_int,
    pub b_opencl: ::std::os::raw::c_int,
    pub i_opencl_device: ::std::os::raw::c_int,
    pub opencl_device_id: *mut ::std::os::raw::c_void,
    pub psz_clbin_file: *mut ::std::os::raw::c_char,
    pub i_slice_max_size: ::std::os::raw::c_int,
    pub i_slice_max_mbs: ::std::os::raw::c_int,
    pub i_slice_min_mbs: ::std::os::raw::c_int,
    pub i_slice_count: ::std::os::raw::c_int,
    pub i_slice_count_max: ::std::os::raw::c_int,
    pub param_free: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut ::std::os::raw::c_void)>,
    pub nalu_process: ::std::option::Option<unsafe extern "C" fn(h:
                                                                     *mut x264_t,
                                                                 nal:
                                                                     *mut x264_nal_t,
                                                                 opaque:
                                                                     *mut ::std::os::raw::c_void)>,
}
impl ::std::clone::Clone for x264_param_t {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for x264_param_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed1 {
    pub i_sar_height: ::std::os::raw::c_int,
    pub i_sar_width: ::std::os::raw::c_int,
    pub i_overscan: ::std::os::raw::c_int,
    pub i_vidformat: ::std::os::raw::c_int,
    pub b_fullrange: ::std::os::raw::c_int,
    pub i_colorprim: ::std::os::raw::c_int,
    pub i_transfer: ::std::os::raw::c_int,
    pub i_colmatrix: ::std::os::raw::c_int,
    pub i_chroma_loc: ::std::os::raw::c_int,
}
impl ::std::default::Default for Struct_Unnamed1 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed2 {
    pub intra: ::std::os::raw::c_uint,
    pub inter: ::std::os::raw::c_uint,
    pub b_transform_8x8: ::std::os::raw::c_int,
    pub i_weighted_pred: ::std::os::raw::c_int,
    pub b_weighted_bipred: ::std::os::raw::c_int,
    pub i_direct_mv_pred: ::std::os::raw::c_int,
    pub i_chroma_qp_offset: ::std::os::raw::c_int,
    pub i_me_method: ::std::os::raw::c_int,
    pub i_me_range: ::std::os::raw::c_int,
    pub i_mv_range: ::std::os::raw::c_int,
    pub i_mv_range_thread: ::std::os::raw::c_int,
    pub i_subpel_refine: ::std::os::raw::c_int,
    pub b_chroma_me: ::std::os::raw::c_int,
    pub b_mixed_references: ::std::os::raw::c_int,
    pub i_trellis: ::std::os::raw::c_int,
    pub b_fast_pskip: ::std::os::raw::c_int,
    pub b_dct_decimate: ::std::os::raw::c_int,
    pub i_noise_reduction: ::std::os::raw::c_int,
    pub f_psy_rd: f32,
    pub f_psy_trellis: f32,
    pub b_psy: ::std::os::raw::c_int,
    pub b_mb_info: ::std::os::raw::c_int,
    pub b_mb_info_update: ::std::os::raw::c_int,
    pub i_luma_deadzone: [::std::os::raw::c_int; 2usize],
    pub b_psnr: ::std::os::raw::c_int,
    pub b_ssim: ::std::os::raw::c_int,
}
impl ::std::default::Default for Struct_Unnamed2 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed3 {
    pub i_rc_method: ::std::os::raw::c_int,
    pub i_qp_constant: ::std::os::raw::c_int,
    pub i_qp_min: ::std::os::raw::c_int,
    pub i_qp_max: ::std::os::raw::c_int,
    pub i_qp_step: ::std::os::raw::c_int,
    pub i_bitrate: ::std::os::raw::c_int,
    pub f_rf_constant: f32,
    pub f_rf_constant_max: f32,
    pub f_rate_tolerance: f32,
    pub i_vbv_max_bitrate: ::std::os::raw::c_int,
    pub i_vbv_buffer_size: ::std::os::raw::c_int,
    pub f_vbv_buffer_init: f32,
    pub f_ip_factor: f32,
    pub f_pb_factor: f32,
    pub b_filler: ::std::os::raw::c_int,
    pub i_aq_mode: ::std::os::raw::c_int,
    pub f_aq_strength: f32,
    pub b_mb_tree: ::std::os::raw::c_int,
    pub i_lookahead: ::std::os::raw::c_int,
    pub b_stat_write: ::std::os::raw::c_int,
    pub psz_stat_out: *mut ::std::os::raw::c_char,
    pub b_stat_read: ::std::os::raw::c_int,
    pub psz_stat_in: *mut ::std::os::raw::c_char,
    pub f_qcompress: f32,
    pub f_qblur: f32,
    pub f_complexity_blur: f32,
    pub zones: *mut x264_zone_t,
    pub i_zones: ::std::os::raw::c_int,
    pub psz_zones: *mut ::std::os::raw::c_char,
}
impl ::std::default::Default for Struct_Unnamed3 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct Struct_Unnamed4 {
    pub i_left: ::std::os::raw::c_uint,
    pub i_top: ::std::os::raw::c_uint,
    pub i_right: ::std::os::raw::c_uint,
    pub i_bottom: ::std::os::raw::c_uint,
}
impl ::std::default::Default for Struct_Unnamed4 {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct x264_level_t {
    pub level_idc: ::std::os::raw::c_int,
    pub mbps: ::std::os::raw::c_int,
    pub frame_size: ::std::os::raw::c_int,
    pub dpb: ::std::os::raw::c_int,
    pub bitrate: ::std::os::raw::c_int,
    pub cpb: ::std::os::raw::c_int,
    pub mv_range: ::std::os::raw::c_int,
    pub mvs_per_2mb: ::std::os::raw::c_int,
    pub slice_rate: ::std::os::raw::c_int,
    pub mincr: ::std::os::raw::c_int,
    pub bipred8x8: ::std::os::raw::c_int,
    pub direct8x8: ::std::os::raw::c_int,
    pub frame_only: ::std::os::raw::c_int,
}
impl ::std::default::Default for x264_level_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum pic_struct_e {
    PIC_STRUCT_AUTO = 0,
    PIC_STRUCT_PROGRESSIVE = 1,
    PIC_STRUCT_TOP_BOTTOM = 4,
    PIC_STRUCT_BOTTOM_TOP = 5,
    PIC_STRUCT_TOP_BOTTOM_TOP = 6,
    PIC_STRUCT_BOTTOM_TOP_BOTTOM = 7,
    PIC_STRUCT_DOUBLE = 8,
    PIC_STRUCT_TRIPLE = 9,
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct x264_hrd_t {
    pub cpb_initial_arrival_time: f64,
    pub cpb_final_arrival_time: f64,
    pub cpb_removal_time: f64,
    pub dpb_output_time: f64,
}
impl ::std::default::Default for x264_hrd_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct x264_sei_payload_t {
    pub payload_size: ::std::os::raw::c_int,
    pub payload_type: ::std::os::raw::c_int,
    pub payload: *mut uint8_t,
}
impl ::std::default::Default for x264_sei_payload_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct x264_sei_t {
    pub num_payloads: ::std::os::raw::c_int,
    pub payloads: *mut x264_sei_payload_t,
    pub sei_free: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                 *mut ::std::os::raw::c_void)>,
}
impl ::std::default::Default for x264_sei_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct x264_image_t {
    pub i_csp: ::std::os::raw::c_int,
    pub i_plane: ::std::os::raw::c_int,
    pub i_stride: [::std::os::raw::c_int; 4usize],
    pub plane: [*mut uint8_t; 4usize],
}
impl ::std::default::Default for x264_image_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct x264_image_properties_t {
    pub quant_offsets: *mut f32,
    pub quant_offsets_free: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                           *mut ::std::os::raw::c_void)>,
    pub mb_info: *mut uint8_t,
    pub mb_info_free: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut ::std::os::raw::c_void)>,
    pub f_ssim: f64,
    pub f_psnr_avg: f64,
    pub f_psnr: [f64; 3usize],
    pub f_crf_avg: f64,
}
impl ::std::default::Default for x264_image_properties_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct x264_picture_t {
    pub i_type: ::std::os::raw::c_int,
    pub i_qpplus1: ::std::os::raw::c_int,
    pub i_pic_struct: ::std::os::raw::c_int,
    pub b_keyframe: ::std::os::raw::c_int,
    pub i_pts: int64_t,
    pub i_dts: int64_t,
    pub param: *mut x264_param_t,
    pub img: x264_image_t,
    pub prop: x264_image_properties_t,
    pub hrd_timing: x264_hrd_t,
    pub extra_sei: x264_sei_t,
    pub opaque: *mut ::std::os::raw::c_void,
}
impl ::std::default::Default for x264_picture_t {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type __builtin_va_list = [__va_list_tag; 1usize];
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct __va_list_tag {
    pub gp_offset: ::std::os::raw::c_uint,
    pub fp_offset: ::std::os::raw::c_uint,
    pub overflow_arg_area: *mut ::std::os::raw::c_void,
    pub reg_save_area: *mut ::std::os::raw::c_void,
}
impl ::std::default::Default for __va_list_tag {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[link(name = "x264", kind = "dylib")]
extern "C" {
    pub static mut x264_levels: [x264_level_t; 0usize];
    pub static x264_bit_depth: ::std::os::raw::c_int;
    pub static x264_chroma_format: ::std::os::raw::c_int;
}
#[link(name = "x264", kind = "dylib")]
extern "C" {
    pub fn x264_nal_encode(h: *mut x264_t, dst: *mut uint8_t,
                           nal: *mut x264_nal_t);
    pub fn x264_param_default(arg1: *mut x264_param_t);
    pub fn x264_param_parse(arg1: *mut x264_param_t,
                            name: *const ::std::os::raw::c_char,
                            value: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn x264_param_default_preset(arg1: *mut x264_param_t,
                                     preset: *const ::std::os::raw::c_char,
                                     tune: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn x264_param_apply_fastfirstpass(arg1: *mut x264_param_t);
    pub fn x264_param_apply_profile(arg1: *mut x264_param_t,
                                    profile: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn x264_picture_init(pic: *mut x264_picture_t);
    pub fn x264_picture_alloc(pic: *mut x264_picture_t,
                              i_csp: ::std::os::raw::c_int,
                              i_width: ::std::os::raw::c_int,
                              i_height: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn x264_picture_clean(pic: *mut x264_picture_t);
    pub fn x264_encoder_open_148(arg1: *mut x264_param_t) -> *mut x264_t;
    pub fn x264_encoder_reconfig(arg1: *mut x264_t, arg2: *mut x264_param_t)
     -> ::std::os::raw::c_int;
    pub fn x264_encoder_parameters(arg1: *mut x264_t,
                                   arg2: *mut x264_param_t);
    pub fn x264_encoder_headers(arg1: *mut x264_t,
                                pp_nal: *mut *mut x264_nal_t,
                                pi_nal: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn x264_encoder_encode(arg1: *mut x264_t,
                               pp_nal: *mut *mut x264_nal_t,
                               pi_nal: *mut ::std::os::raw::c_int,
                               pic_in: *mut x264_picture_t,
                               pic_out: *mut x264_picture_t)
     -> ::std::os::raw::c_int;
    pub fn x264_encoder_close(arg1: *mut x264_t);
    pub fn x264_encoder_delayed_frames(arg1: *mut x264_t)
     -> ::std::os::raw::c_int;
    pub fn x264_encoder_maximum_delayed_frames(h: *mut x264_t)
     -> ::std::os::raw::c_int;
    pub fn x264_encoder_intra_refresh(arg1: *mut x264_t);
    pub fn x264_encoder_invalidate_reference(arg1: *mut x264_t, pts: int64_t)
     -> ::std::os::raw::c_int;
}
